// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250106155527_ClusterStatusAndConfiguration")]
    partial class ClusterStatusAndConfiguration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Cluster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Status");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SystemName");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("Clusters");
                });

            modelBuilder.Entity("Core.Entities.ClusterConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClusterId")
                        .HasColumnType("integer")
                        .HasColumnName("ClusterId");

                    b.Property<int>("StorageSize")
                        .HasColumnType("integer")
                        .HasColumnName("StorageSize");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId")
                        .IsUnique();

                    b.ToTable("ClusterConfigurations");
                });

            modelBuilder.Entity("Core.Entities.ClusterConfiguration", b =>
                {
                    b.HasOne("Core.Entities.Cluster", "Cluster")
                        .WithOne("Configuration")
                        .HasForeignKey("Core.Entities.ClusterConfiguration", "ClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cluster");
                });

            modelBuilder.Entity("Core.Entities.Cluster", b =>
                {
                    b.Navigation("Configuration")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
